<%#
kind: snippet
name: GG-Xsnippet_gui
model: ProvisioningTemplate
snippet: true
locations:
- Home
organizations:
- GatwardIT
- MyOrg
%>

<%
rhel_compatible = @host.operatingsystem.family == 'Redhat' && @host.operatingsystem.name != 'Fedora'
is_fedora = @host.operatingsystem.name == 'Fedora'
os_major = @host.operatingsystem.major.to_i
os_minor = @host.operatingsystem.minor.to_i
use_systemd = (is_fedora && os_major >= 16) || (rhel_compatible && os_major >= 7)
%>

echo "++++++++++++++++++++++ GUI Installation/Configure Snippet +++++++++++++++++++++"

echo ">>> Installing GUI packages..."
<% if rhel_compatible && os_major >= 7 %>
  if [ -f /usr/bin/dnf ]; then
    dnf -y groupinstall "Server with GUI"
  else
    yum -t -y groupinstall "Server with GUI"
  fi
<% elsif is_fedora && os_major >=29 %>
  dnf -y groupinstall GNOME
<% else %>
  echo "**** NO GUI GROUP KNOWN ****"
#  yum -y groupinstall "GNOME Desktop" "Graphical Administration Tools"
<% end %>

if [ -f /usr/bin/dnf ]; then
  dnf -y install glib2-devel
else
  yum -t -y install glib2-devel
fi

if [ $(rpm -qa | grep -c ^gdm-) -ne 0 ]; then
  mkdir -p /etc/dconf/db/{local.d,gdm.d}

  # Configure GDM defaults
  echo "user-db:user" > /etc/dconf/profile/gdm
  echo "system-db:gdm" >> /etc/dconf/profile/gdm
  echo "file-db:/usr/share/gdm/greeter-dconf-defaults" >> /etc/dconf/profile/gdm

  # Disable list of usernames on login window
  echo "[org/gnome/login-screen]" > /etc/dconf/db/gdm.d/00-login-screen
  echo "disable-user-list=true" >> /etc/dconf/db/gdm.d/00-login-screen

  # Enforce screensaver
  echo "[org/gnome/desktop/screensaver]" > /etc/dconf/db/local.d/02-screensaver
  echo "idle-activation-enabled=true" >> /etc/dconf/db/local.d/02-screensaver
  echo "lock-enabled=true" >> /etc/dconf/db/local.d/02-screensaver
  <% if (rhel_compatible && os_major >= 8) || (is_fedora && os_major >= 29) %>
  echo "lock-delay=uint32 180" >> /etc/dconf/db/local.d/02-screensaver
  <% else %>
  echo "lock-delay=180" >> /etc/dconf/db/local.d/02-screensaver
  <% end %>
  echo "" >> /etc/dconf/db/local.d/02-screensaver
  echo "[org/gnome/desktop/session]" >> /etc/dconf/db/local.d/02-screensaver
  <% if (rhel_compatible && os_major >= 8) || (is_fedora && os_major >= 29) %>
  echo "idle-delay=uint32 180" >> /etc/dconf/db/local.d/02-screensaver
  <% else %>
  echo "idle-delay=180" >> /etc/dconf/db/local.d/02-screensaver
  <% end %>
  echo "" >> /etc/dconf/db/local.d/02-screensaver
  <% if (rhel_compatible && os_major >= 8) || (is_fedora && os_major >= 29) %>
  echo "/org/gnome/desktop/session/idle-delay" >> /etc/dconf/db/local.d/locks/screensaver
  echo "/org/gnome/desktop/screensaver/lock-enabled" >> /etc/dconf/db/local.d/locks/screensaver
  echo "/org/gnome/desktop/screensaver/lock-delay" >> /etc/dconf/db/local.d/locks/screensaver
  <% else %>
  echo "[org/gnome/desktop/lockdown]" >> /etc/dconf/db/local.d/02-screensaver
  echo "disable-lock-screen=false" >> /etc/dconf/db/local.d/02-screensaver
  echo "/org/gnome/desktop/screensaver/idle-activation-enabled" > /etc/dconf/db/local.d/locks/screensaver
  echo "/org/gnome/desktop/session/idle-delay" > /etc/dconf/db/local.d/locks/session
  echo "/org/gnome/desktop/lockdown/disable-lock-screen" > /etc/dconf/db/local.d/locks/lockdown
  <% end %>

  <% if host_param('gui_desktop_background') %>
    # Enable default background
    wget -q -O /usr/share/backgrounds/desktop_bground.jpg <%= host_param('gui_desktop_background') %>
    echo "[org/gnome/desktop/background]" > /etc/dconf/db/local.d/01-background
    echo "picture-uri='file:///usr/share/backgrounds/desktop_bground.jpg'" >> /etc/dconf/db/local.d/01-background
    # echo "/org/gnome/desktop/background/picture-uri" > /etc/dconf/db/local.d/locks/background
  <% end %>

  <% if host_param('gui_desktop_logo') %>
    # Add logo to the login screen
    mkdir -p /usr/share/pixmaps/logo/
    wget -q -O /usr/share/pixmaps/logo/desktop-logo.png <%= host_param('gui_desktop_logo') %>
    echo "logo='/usr/share/pixmaps/logo/desktop-logo.png'" >> /etc/dconf/db/gdm.d/00-login-screen
  <% end %>

  #####
  # Fix default icon view level
  echo "[org/gnome/nautilus/icon-view]" > /etc/dconf/db/local.d/01-default-icon-view
  echo "default-zoom-level='standard'" >> /etc/dconf/db/local.d/01-default-icon-view

  dconf update
fi

echo ">>> Disable GNOME Firstboot wizard"
yum -q -y remove gnome-initial-setup

<% unless host_param_true?('headless') %>
  echo ">>> Enable Graphical Target"
  systemctl set-default graphical.target
<% end %>

######################

<% if host_param_true?('nvidia') %>
  echo ">>> Install NVIDIA driver"

  <% if rhel_compatible %>
    yum -y install https://download1.rpmfusion.org/free/el/rpmfusion-free-release-<% os_major %>.noarch.rpm
    yum -y install https://download1.rpmfusion.org/free/el/rpmfusion-nonfree-release-<% os_major %>.noarch.rpm
  <% elsif is_fedora %>
    yum -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-<% os_major %>.noarch.rpm
    yum -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-nonfree-release-<% os_major %>.noarch.rpm
  <% end %>

  CARD=$(lspci | grep -i vga | grep -i NVIDIA | cut -d[ -f2 | cut -d] -f1)
  echo "  >> Detected $CARD"
#   if [ $(echo $CARD | grep -c 'Quadro FX') -eq 1 ]; then
#     echo "  >> NVIDIA Driver series = 340.x - ** NO LONGER SUPPORTED, DRIVER NOT AVAILABLE **"
#     #ver="-340xx"
#     ver="na"
#   elif [ $(echo $CARD | egrep -c 'Quadro K|Quadro 2000|Quadro 4000') -eq 1 ]; then
#     echo "  >> NVIDIA Driver series = 390.x"
#     ver="-390xx"
#   elif [ $(echo $CARD | grep -c 'Quadro 400') -eq 1 ]; then
#     echo "  >> NVIDIA Driver series = 430.x"
#     ver="-430"
#   else
    echo "  >> Trying latest drivers"
    ver=""
#   fi

  if [ "$ver" != "na" ]; then
    yum install -y xorg-x11-drv-nvidia${ver} akmod-nvidia${ver} xorg-x11-drv-nvidia${ver}-cuda
  fi
<% end %>


######################

<%# Setup last login banner %>
<% if (rhel_compatible && os_major >= 8) || is_fedora %>
cat << EOF > /usr/local/bin/xwarn.sh
sleep 1
zenity --title "WARNING" --no-wrap --question --text "\$(cat /etc/issue)\n\nContinue?\n"
if [ \$? -ne 0 ]; then gnome-session-quit --no-prompt; fi
EOF
  chmod 755  /usr/local/bin/xwarn.sh
  cat << EOF > /etc/xdg/autostart/xwarn.desktop
[Desktop Entry]
Type=Application
Name=Login Warning
Exec=/usr/local/bin/xwarn.sh
OnlyShowIn=GNOME;MATE;Unity;Cinnamon;
EOF

<% else %>
cat << EOF > /etc/X11/xinit/xinitrc.d/xwarn.sh
sleep 1
zenity --title "WARNING" --no-wrap --question --text "\$(cat /etc/issue)\n\nContinue?\n"
if [ \$? -ne 0 ]; then exit 1; fi
EOF
  chmod 755 /etc/X11/xinit/xinitrc.d/xwarn.sh
<% end %>

<%# Configure XRDP %>
<% if host_param_true?('xrdp') -%>
  echo ">>> Installing xrdp packages..."
  <% if rhel_compatible && os_major >= 7 %>
    if [ $(yum repolist | grep -ic epel) -ne 0 ]; then
      if [ -f /usr/bin/dnf ]; then
        dnf -y install xrdp xrdp-selinux
      else
        yum -t -y install xrdp xrdp-selinux
      fi
    else
        echo "ERROR: EPEL repository is not enabled"
    fi
  <% elsif is_fedora && os_major >= 26 %>
    dnf -y install xrdp xrdp-selinux
  <% end %>
  systemctl enable xrdp
  systemctl enable xrdp-sesman
  firewall-offline-cmd --add-port 3389/tcp

  # Install configuration file
  cat << EOF > /etc/xrdp/xrdp.ini
  <%= snippet "GG-Xconfig_xrdp.ini" %>
  EOF


  # Install logo
  #wget -q -O /usr/share/xrdp/xrdp_logo.bmp http://repo.example.org/desktop/backgrounds/xrdp_logo.bmp

  # We need custom selinux policy as oddjobd cannot create homedirs via xrdp with the supplied policy
  #echo ">>> Applying xrdp/oddjobd SELinux policy"
  cat << EOF > /tmp/xrdp_mkhomedir.te
module xrdp_mkhomedir 1.0;

require {
    type unconfined_service_t;
    type oddjob_t;
    type oddjob_mkhomedir_exec_t;
    class process transition;
    class file entrypoint;
}

#============= oddjob_t ==============
allow oddjob_t unconfined_service_t:process transition;

#============= unconfined_service_t ==============
allow unconfined_service_t oddjob_mkhomedir_exec_t:file entrypoint;
EOF

  checkmodule -M -m -o /tmp/xrdp_mkhomedir.mod /tmp/xrdp_mkhomedir.te
  semodule_package -m /tmp/xrdp_mkhomedir.mod -o /tmp/xrdp_mkhomedir.pp
  semodule -i /tmp/xrdp_mkhomedir.pp

  # Create polkit rules to allow xrdp access to colord
  # *** Set 'usergroup' to the posix user group to allow ***
  cat << EOF > /etc/polkit-1/rules.d/99-xrdp-colord.rules
polkit.addRule(function(action, subject) {
  if ((action.id == "org.freedesktop.color-manager.create-device" ||
       action.id == "org.freedesktop.color-manager.create-profile" ||
       action.id == "org.freedesktop.color-manager.delete-device" ||
       action.id == "org.freedesktop.color-manager.delete-profile" ||
       action.id == "org.freedesktop.color-manager.modify-device" ||
       action.id == "org.freedesktop.color-manager.modify-profile") &&
       subject.isInGroup("{users}")) {
         return polkit.Result.YES;
       }
});
EOF
  chmod 644 /etc/polkit-1/rules.d/99-xrdp-colord.rules
<% end %>

<% if is_fedora && os_major >= 25 %>
echo 'allowed_users = anybody' >> /etc/X11/Xwrapper.config
chmod 0644 /etc/X11/Xwrapper.config
<% end %>


<% if rhel_compatible && os_major == 7 %>
#  echo ">>> Applying krb5child SELinux policy"
#  wget -q -O /tmp/my-krb5child.te http://repo.example.org/desktop/selinux/my-krb5child.te
#  checkmodule -< -m -o /tmp/my-krb5child.mod /tmp/my-krb5child.te
#  semodule_package -m /tmp/my-krb5child.mod -o /tmp/my-krb5child.pp
#  semodule -i /tmp/my-krb5child.pp

  <%# Fix libcolor %>
  echo ">>> Fix libcolor"
  rm -f /usr/lib64/gnome-settings-daemon-3.0/libcolor.so
  touch /usr/lib64/gnome-settings-daemon-3.0/libcolor.so
  chattr +i /usr/lib64/gnome-settings-daemon-3.0/libcolor.so
<% end %>

<%# Configure Firefox %>
yum -q -y install firefox
echo ">>> Configure Firefox defaults"
chmod 755 /usr/lib64/firefox/defaults

# Configure Firefox to read in our custom config
<% if is_fedora %>
  prefs_dir=/etc/firefox/pref
  prefs_file=/usr/lib64/firefox/browser/defaults/preferences/firefox-redhat-default-prefs.js
<% else %>
  prefs_dir=/usr/lib64/firefox/defaults/preferences
  prefs_file=${prefs_dir}/all-redhat.js
<% end %>
cat << EOF >> ${prefs_file}

pref("general.config.obscure_value",    0);
pref("general.config.filename",         "mozilla-custom.cfg");
EOF

# Install our custom config
cat << EOF > ${prefs_dir}/mozilla-custom.cfg
<%= snippet "GG-Xconfig_mozilla-custom.cfg" %>
EOF
chmod 644 ${prefs_dir}/mozilla-custom.cfg



# Install autostart scripts
#echo ">>> Install Login Scripts"
#wget -q -O /usr/local/bin/myorg_gui.sh http://repo.example.org/desktop/scripts/myorg_gui.sh
#chmod 755 /usr/local/bin/myorg_gui.sh

#wget -q -O /etc/xdg/autostart/myorg_gui.desktop http://repo.example.org/desktop/scripts/myorg_gui.desktop
#chmod 644 /etc/xdg/autostart/myorg_gui.desktop



# Install and configure Citrix
#echo ">>> Install Citrix Receiver"
#mkdir -p /tmp/rtmeok  # Needed for hdx-realtime install
#yum -q -y install ICAClient citrix-hdx-realtime-media-engine

#cp /etc/pki/ca-trust/source/anchors/GatwardIT-CA2.pem /opt/Citrix/ICAClient/keystore/cacerts
#chmod 644 /etc/pki/ca-trust/source/anchors/GatwardIT-CA2.pem
#/opt/Citrix/ICAClient/util/ctx_rehash

# Copy global default configuration
#mkdir -p /etc/skel/.ICAClient/cache/Stores
#cat << EOF > /etc/skel/.ICAClient/cache/Stores/StoreCache.ctx
#<StoreCache>
#  <DefaultStore>https://citrix.example.com/config.xml</DefaultStore>
#  <ReconnectOnLogon>False</ReconnectOnLogon>
#  <ReconnectOnLaunchOrRefresh>False</ReconnectOnLaunchOrRefresh>
#  <SharedUserMode>False</SharedUserMode>
#  <FullscreenMode>0</FullscreenMode>
#  <SelfSelection>True</SelfSelection>
#  <SessionWindowedMode>False</SessionWindowedMode>
#  <VisibleStores>
#    <Store name="https://citrix.example.com/config.xml" type="PNA">
#      https://citrix.exmaple.com/config.xml
#    </Store>
#  </VisibleStores>
#</StoreCache>
#EOF
#chmod 644 /etc/skel/.ICAClient/cache/Stores/StoreCache.ctx

# Configure Printer
echo ">>> Configure Printing"
yum -q -y install cups foomatic-db-ppds <% if rhel_compatible %>foomatic-filters<% end %>
firewall-offline-cmd --add-service ipp-client --add-service mdns

cat << EOF > /etc/cups/ppd/RICOH-MP-C4503.ppd
<%= snippet "GG-Xconfig_RICOH-MP-C4503.ppd" %>
EOF
chmod 644 /etc/cups/ppd/RICOH-MP-C4503.ppd

cat << EOF > /etc/cups/printers.conf
<%= snippet "GG-Xconfig_printers.conf" %>
EOF
chmod 600 /etc/cups/printers.conf
