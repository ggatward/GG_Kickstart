<%#
kind: snippet
name: GatwardIT-Xsnippet_gui
model: ProvisioningTemplate
snippet: true
%>

<%
rhel_compatible = @host.operatingsystem.family == 'Redhat' && @host.operatingsystem.name != 'Fedora'
is_fedora = @host.operatingsystem.name == 'Fedora'
os_major = @host.operatingsystem.major.to_i
os_minor = @host.operatingsystem.minor.to_i
use_systemd = (is_fedora && os_major >= 16) || (rhel_compatible && os_major >= 7)
%>

echo "++++++++++++++++++++++ GUI Installation/Configure Snippet +++++++++++++++++++++"

echo ">>> Installing GUI packages..."
<% if rhel_compatible && os_major >= 7 %>
  if [ -f /usr/bin/dnf ]; then
    dnf -y groupinstall "Server with GUI"
  else
    yum -t -y groupinstall "Server with GUI"
  fi
<% elsif is_fedora && os_major >=29 %>
  dnf -y groupinstall GNOME
<% else %>
  echo "**** NO GUI GROUP KNOWN ****"
#  yum -y groupinstall "GNOME Desktop" "Graphical Administration Tools"
<% end %>

if [ -f /usr/bin/dnf ]; then
  dnf -y install glib2-devel
else
  yum -t -y install glib2-devel
fi

if [ $(rpm -qa | grep -c ^gdm-) -ne 0 ]; then
  mkdir -p /etc/dconf/db/{local.d,gdm.d}

  # Configure GDM defaults
  echo "user-db:user" > /etc/dconf/profile/gdm
  echo "system-db:gdm" >> /etc/dconf/profile/gdm
  echo "file-db:/usr/share/gdm/greeter-dconf-defaults" >> /etc/dconf/profile/gdm

  # Disable list of usernames on login window
  echo "[org/gnome/login-screen]" > /etc/dconf/db/gdm.d/00-login-screen
  echo "disable-user-list=true" >> /etc/dconf/db/gdm.d/00-login-screen

  # Enforce screensaver
  echo "[org/gnome/desktop/screensaver]" > /etc/dconf/db/local.d/02-screensaver
  echo "idle-activation-enabled=true" >> /etc/dconf/db/local.d/02-screensaver
  echo "lock-enabled=true" >> /etc/dconf/db/local.d/02-screensaver
  echo "lock-delay=900" >> /etc/dconf/db/local.d/02-screensaver
  echo "" >> /etc/dconf/db/local.d/02-screensaver
  echo "[org/gnome/desktop/session]" >> /etc/dconf/db/local.d/02-screensaver
  echo "idle-delay=900" >> /etc/dconf/db/local.d/02-screensaver
  echo "" >> /etc/dconf/db/local.d/02-screensaver
  echo "[org/gnome/desktop/lockdown]" >> /etc/dconf/db/local.d/02-screensaver
  echo "disable-lock-screen=false" >> /etc/dconf/db/local.d/02-screensaver
  echo "/org/gnome/desktop/screensaver/idle-activation-enabled" > /etc/dconf/db/local.d/locks/screensaver
  echo "/org/gnome/desktop/session/idle-delay" > /etc/dconf/db/local.d/locks/session
  echo "/org/gnome/desktop/lockdown/disable-lock-screen" > /etc/dconf/db/local.d/locks/lockdown

  <% if host_param('gui_desktop_background') %>
    # Enable default background
    wget -q -O /usr/share/backgrounds/desktop_bground.jpg <%= host_param('gui_desktop_background') %>
    echo "[org/gnome/desktop/background]" > /etc/dconf/db/local.d/01-background
    echo "picture-uri=file:///usr/share/backgrounds/desktop_bground.jpg" >> /etc/dconf/db/local.d/01-background
    # echo "/org/gnome/desktop/background/picture-uri" > /etc/dconf/db/local.d/locks/background
  <% end %>

  <% if host_param('gui_desktop_logo') %>
    # Add logo to the login screen
    mkdir -p /usr/share/pixmaps/logo/
    wget -q -O /usr/share/pixmaps/logo/desktop-logo.png <%= host_param('gui_desktop_logo') %>
    echo "logo='/usr/share/pixmaps/logo/desktop-logo.png'" >> /etc/dconf/db/gdm.d/00-login-screen
  <% end %>

  #####
  # Fix default icon view level
  echo "[org/gnome/nautilus/icon-view]" > /etc/dconf/db/local.d/01-default-icon-view
  echo "default-zoom-level='standard'" >> /etc/dconf/db/local.d/01-default-icon-view

  dconf update
fi

echo ">>> Disable GNOME Firstboot wizard"
yum -q -y remove gnome-initial-setup

<% unless host_param_true?('headless') %>
  echo ">>> Enable Graphical Target"
  systemctl set-default graphical.target
<% end %>

######################

<% if host_param_true?('nvidia') %>
  echo ">>> Install NVIDIA driver"

  CARD=$(lspci | grep -i vga | grep -i NVIDIA | cut -d[ -f2 | cut -d] -f1)
  echo "  >> Detected $CARD"
  if [ $(echo $CARD | egrep -c 'Quadro K|Quadro 2000') -eq 1 ]; then
    echo "  >> NVIDIA Driver series = 390.x"
    ver="kmod-nvidia-390xx"
  elif [ $(echo $CARD | grep -c 'Quadro FX') -eq 1 ]; then
    echo "  >> NVIDIA Driver series = 340.x"
    ver="kmod-nvidia-340xx"
  elif [ $(echo $CARD | grep -c 'Quadro 4000') -eq 1 ]; then
    echo "  >> NVIDIA Driver series = 375.x *** NOT YET SUPPORTED IN KS"
    ver="unk"
  else
    echo "  >> Unknown graphics card - SKIPPING"
    ver="unk"
  fi

  if [ "$ver" != "unk" ]; then
    echo "  >> Blacklist nouveau driver"
    cat > /etc/modprobe.d/disable_nouveau.conf << EOL
blacklist nouveau
options nouveau modeset=0
EOL

    echo "  >> Install nvidia kmod package"
    cat << EOF > /etc/yum.repos.d/elrepo.repo
[elrepo-el7]
name=elrepo-el7-x86_64
baseurl=http://syd.mirror.rackspace.com/elrepo/elrepo/el7/x86_64/
enabled=1
gpgcheck=0
EOF

    yum -q -y install $ver
  fi
<% end %>

######################

<%# Setup last login banner %>
#mkdir -p /etc/X11/xinit/scripts
#wget -q -O /etc/X11/xinit/scripts/lastuserlogin.pl http://repo.example.org/desktop/scripts/lastuserlogin.pl
#wget -q -O /etc/X11/xinit/scripts/xwarn.sh http://repo.example.org/desktop/scripts/xwarn.sh
#chmod +x /etc/X11/xinit/scripts/*
#ln -s /etc/X11/xinit/scripts/xwarn.sh /etc/X11/xinit/xinitrc.d/xwarn.sh

<%# Configure XRDP %>
<% if host_param_true?('xrdp') -%>
  echo ">>> Installing xrdp packages..."
  yum -q -y install xrdp xrdp-selinux
  systemctl enable xrdp
  systemctl enable srdp-sesman
  firewall-offline-cmd --add-port 3389/tcp

  # Install configuration file
  wget -q -O /etc/xrdp/xrdp.ini http://repo.example.org/desktop/configs/xrdp.ini

  # Install logo
  wget -q -O /usr/share/xrdp/xrdp_logo.bmp http://repo.example.org/desktop/backgrounds/xrdp_logo.bmp

  # We need custom selinux policy as oddjobd cannot create homedirs via xrdp with the supplied policy
  echo ">>> Applying xrdp/oddjobd SELinux policy"
  wget -q -O /tmp/xrdp_mkhomedir.te http://repo.example.org/desktop/selinux/xrdp_mkhomedir.te
  checkmodule -< -m -o /tmp/xrdp_mkhomedir.mod /tmp/xrdp_mkhomedir.te
  semodule_package -m /tmp/xrdp_mkhomedir.mod -o /tmp/xrdp_mkhomedir.pp
  semodule -i /tmp/xrdp_mkhomedir.pp

  # Create polkit rules to allow xrdp access to colord
  # *** Set 'usergroup' to the posix user group to allow ***
  cat << EOF > /etc/polkit-1/rules.d/99-xrdp-colord.rules
polkit.addRule(function(action, subject) {
   if ((action.id == "org.freedesktop.color-manager.create-device" ||
        action.id == "org.freedesktop.color-manager.create-profile" ||
        action.id == "org.freedesktop.color-manager.delete-device" ||
        action.id == "org.freedesktop.color-manager.delete-profile" ||
        action.id == "org.freedesktop.color-manager.modify-device" ||
        action.id == "org.freedesktop.color-manager.modify-profile") &&
        subject.isInGroup("usergroup")) {
          return polkit.Result.YES;
        }
});
EOF
  chmod 644 /etc/polkit-1/rules.d/99-xrdp-colord.rules
<% end %>


<% if rhel_compatible && os_major == 7 %>
#  echo ">>> Applying krb5child SELinux policy"
#  wget -q -O /tmp/my-krb5child.te http://repo.example.org/desktop/selinux/my-krb5child.te
#  checkmodule -< -m -o /tmp/my-krb5child.mod /tmp/my-krb5child.te
#  semodule_package -m /tmp/my-krb5child.mod -o /tmp/my-krb5child.pp
#  semodule -i /tmp/my-krb5child.pp

  <%# Fix libcolor %>
#  echo ">>> Fix libcolor"
#  rm -f /usr/lib64/gnome-settings-daemon-3.0/libcolor.so
#  touch /usr/lib64/gnome-settings-daemon-3.0/libcolor.so
#  chattr +i /usr/lib64/gnome-settings-daemon-3.0/libcolor.so
<% end %>

<%# Configure Firefox %>
#echo ">>> Configure Firefox defaults"
#chmod 755 /usr/lib64/firefox/defaults

# Configure Firefox to read in our custom config
#cat >> /usr/lib64/firefox/defaults/preferences/all-redhat.js << EOF
#pref("general.config.obscure_value",    0);
#pref("general.config.filename",         "mozilla-myorg.cfg");
#EOF

# Install our custom config
#wget -q -O /usr/lib64/firefox/defaults/preferences/mozilla-myorg.cfg http://repo.example.org/desktop/configs/mozilla-myorg.cfg
#chmod 644 /usr/lib64/firefox/defaults/preferences/mozilla-myorg.cfg

# Install autostart scripts
#echo ">>> Install Login Scripts"
#wget -q -O /usr/local/bin/myorg_gui.sh http://repo.example.org/desktop/scripts/myorg_gui.sh
#chmod 755 /usr/local/bin/myorg_gui.sh

#wget -q -O /etc/xdg/autostart/myorg_gui.desktop http://repo.example.org/desktop/scripts/myorg_gui.desktop
#chmod 644 /etc/xdg/autostart/myorg_gui.desktop

# Install and configure Citrix
#echo ">>> Install Citrix Receiver"
#mkdir -p /tmp/rtmeok  # Needed for hdx-realtime install
#yum -q -y install ICAClient citrix-hdx-realtime-media-engine

#cp /etc/pki/ca-trust/source/anchors/GatwardIT-CA2.pem /opt/Citrix/ICAClient/keystore/cacerts
#chmod 644 /etc/pki/ca-trust/source/anchors/GatwardIT-CA2.pem
#/opt/Citrix/ICAClient/util/ctx_rehash

# Copy global default configuration
#mkdir -p /etc/skel/.ICAClient/cache/Stores
#cat << EOF > /etc/skel/.ICAClient/cache/Stores/StoreCache.ctx
#<StoreCache>
#  <DefaultStore>https://citrix.example.com/config.xml</DefaultStore>
#  <ReconnectOnLogon>False</ReconnectOnLogon>
#  <ReconnectOnLaunchOrRefresh>False</ReconnectOnLaunchOrRefresh>
#  <SharedUserMode>False</SharedUserMode>
#  <FullscreenMode>0</FullscreenMode>
#  <SelfSelection>True</SelfSelection>
#  <SessionWindowedMode>False</SessionWindowedMode>
#  <VisibleStores>
#    <Store name="https://citrix.example.com/config.xml" type="PNA">
#      https://citrix.exmaple.com/config.xml
#    </Store>
#  </VisibleStores>
#</StoreCache>
#EOF
#chmod 644 /etc/skel/.ICAClient/cache/Stores/StoreCache.ctx

# Configure Printer
#echo ">>> Configure Printing"
#yum -q -y install cups foomatic-db-ppds foomatic-filters
#firewall-offline-cmd --add-service ipp-client --add-service mdns

#wget -q -O /etc/cups/ppd/RICOH-MP-C4503.ppd http://repo.example.org/desktop/configs/RICOH-MP-C4503.ppd
#chmod 644 /etc/cups/ppd/RICOH-MP-C4503.ppd
#wget -q -O /etc/cups/printers.conf http://repo.example.org/desktop/configs/printers.conf
#chmod 600 /etc/cups/printers.conf
