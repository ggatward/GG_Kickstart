<%#
kind: snippet
name: GG-Xconfig_mozilla-custom.cfg
model: ProvisioningTemplate
snippet: true
organizations:
- GatwardIT
- MyOrg
%>
// Mozilla Firefox Autoconfig

try {
    // Disable disk cache
    defaultPref("browser.cache.disk.capacity", 0);
    lockiles/file_contexts.homedirs
    Pref("browser.cache.disk.enable", false);

    // Set Proxy
    lockPref("config.use_system_prefs", false);
    lockPref("network.proxy.autoconfig_url", "http://config.example.com/pac/proxy.pac");
    lockPref("network.proxy.type", 2);

    // Set default homepage
    if (getPref("xxx.runonce") == null) {
        pref("browser.startup.homepage", "https://google.com.au/");
    }
    pref("xxx.runonce", true);

    lockPref("browser.throbber.url", "https://google.com.au");
    defaultPref("browser.startup.homepage_override", false);
    lockPref("startup.homepage_override_url", "https://google.com.au");
    lockPref("startup.homepage_welcome_url", "https://google.com.au");

    // Turn off password caching
    lockPref("signon.rememberSignons", false);

    // Show protocol being used
    lockPref("browser.urlbar.trimURLs", false);

    // SSLv2 is not secure - also disable certain ciphers
    lockPref("security.enable_ssl2", false);
    lockPref("security.ssl3.rsa_null_md5", false);
    lockPref("security.ssl3.rsa_nul_sha", false);
    lockPref("security.ssl3.rsa_rc4_128_md5", false);
    lockPref("security.ssl3.rsa_rc4_128_sha", false);
    lockPref("security.ssl3.rsa_rc4_40_md5", false);
    lockPref("security.ssl3.rsa_rc4_20_md5", false);
    lockPref("security.ssl3.rsa_1024_des_cbc_sha", false);
    lockPref("security.ssl3.rsa_1024_rc4_56_sha", false);


    // Prevent users disabling this warning
    pref("security.warn_leaving_secure", true);
    loclPref("security.warn_viewing_mixed", true);

    // Enable TLS 1.2
    pref("security.tls.version.max", 3);

    // Disable SSLv3.0
    lockPref("security.tls.version.min", 1);

    // Load plugins from plugins directory
    lockPref("plugins.load_appdir_plugins", true);

    // Disable health reporting
    lockPref("datareporting.healthreport.service.enabled", false);
    lockPref("datareporting.healthreport.uploadEnabled", false);

    // Disable Telemetry
    lockPref("toolkit.telemetry.enabled", false);
    lockPref("toolkit.telemetry.prompted", 2);

    // Disable extension blocking (eg Java)
    pref("extensions.blocklist.enabled", false);

} catch (e) {
    // Some other error in the config file
    displayError("Error loading Mozilla Autoconfig", e);
}
